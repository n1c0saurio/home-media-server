services:

    # File browsing
    webdav:
        build:
            context: .
            dockerfile: webdav.dockerfile
            args:
                - OWNER_NAME=${USER_GROUP_NAME}
                - OWNER_ID=${USER_GROUP_ID}
                - CONFIG_FILE=nginx.conf
                - AUTH_FILE=.htpasswd
        container_name: webdav
        ports:
            - ${WEBDAV_PORT}:80
        volumes:
            - ${ROOT_PATH}:/var/www/webdav:z
        deploy:
            resources:
                limits:
                    cpus: "0.75"
                    memory: 1g

    # Torrent
    transmission:
        image: lscr.io/linuxserver/transmission:${TRANSMISSION_VER}
        container_name: transmission
        environment:
            - PUID=${USER_GROUP_ID}
            - PGID=${USER_GROUP_ID}
            - TZ=${TIMEZONE}
            - USER=${SERVICES_USER}
            - PASS=${TRANSMISSION_PASS}
        volumes:
            - ${ROOT_PATH}${TRANSMISSION_CONFIG}:/config:z
            - ${ROOT_PATH}:/downloads:z
        ports:
            - ${TRANSMISSION_PORT}:9091
            - 55797:55797
            - 55797:55797/udp
        deploy:
            resources:
                limits:
                    cpus: "0.75"
                    memory: 1g

    # Comics and Books
    komga:
        image: gotson/komga:${KOMGA_VER}
        container_name: komga
        user: ${USER_GROUP_ID}:${USER_GROUP_ID}
        environment:
            - TZ=${TIMEZONE}
            - JAVA_TOOL_OPTIONS=-Xmx1g
        ports:
            - ${KOMGA_PORT}:25600
        volumes:
            - ${ROOT_PATH}${KOMGA_CONFIG}:/config:z
            - ${ROOT_PATH}${COMICS_DIR}:/data/historietas:z
            - ${ROOT_PATH}${BOOKS_DIR}:/data/libros:z
            - ${ROOT_PATH}${ARTBOOKS_DIR}:/data/artbooks:z
            - ${ROOT_PATH}${TSUNDOKU_LIBRARY_DIR}:/data/tsundoku:z
        deploy:
            resources:
                limits:
                    cpus: "0.75"
                    memory: 1g
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:25600/actuator/health || exit 1"] # TODO: Add custom healtcheck script
            interval: 90s
            timeout: 15s
            start_period: 3m
            retries: 2

    # Series and music
    jellyfin:
        image: jellyfin/jellyfin:${JELLYFIN_VER}
        container_name: jellyfin
        user: ${USER_GROUP_ID}:${USER_GROUP_ID}
        environment:
            - TZ=${TIMEZONE}
        ports:
            - ${JELLYFIN_PORT}:8096
        volumes:
            - ${ROOT_PATH}${JELLYFIN_CONFIG}:/config:z
            - ${ROOT_PATH}${JELLYFIN_CACHE}:/cache:z
            - ${ROOT_PATH}${MUSIC_DIR}:/media/musica:z
            - ${ROOT_PATH}${SERIES_DIR}:/media/series:z
            - ${ROOT_PATH}${TSUNDOKU_VIDEOS_DIR}:/media/tsundoku:z
        deploy:
            resources:
                limits:
                    cpus: "0.75"
                    memory: 1g
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:8096/health || exit 1"] # TODO: Add custom healtcheck script
            interval: 90s
            timeout: 15s
            start_period: 3m
            retries: 2

    # P2P
    # TODO: Add Soulseek service
